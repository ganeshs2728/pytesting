name: sample
on:
  push:
    branches:
      - "main"

jobs:
  conditional_job_check_files:
    runs-on: "ubuntu-20.04"
    # Declare outputs for next jobs
    # outputs:
    #   docs_changed: ${{ steps.check_file_changed.${{env.docs_changed}} }}
    steps:
      - uses: actions/checkout@v2
        with:
          # Checkout as many commits as needed for the diff
          fetch-depth: 2
      - name: check file
        id: check_file_changed
        run: |
          sh $diff = git diff --name-only HEAD^ HEAD
          sh $SourceDiff = $diff | Where-Object { $_ -match '^sampleaction/'}
          sh $HasDiff = $SourceDiff.Length -gt 0
          echo "docs_changed=HasDiff" >> "$GITHUB_OUTPUT"
          echo "DOCS_CHANGED=green" >> "$GITHUB_OUTPUT"
        #  Write-Host "::set-output name=docs_changed::$HasDiff"
      - name: next step
        run: echo "The selected color is ${{ steps.check_file_changed.outputs.DOCS_CHANGED }}"
      - name: Set color
        id: random-color-generator
        run: echo "SELECTED_COLOR=green" >> "$GITHUB_OUTPUT"
      - name: Get color

        run: echo "The selected color is ${{ steps.random-color-generator.outputs.SELECTED_COLOR }}"

  # Run the job only with "docs_changed" equals "True"
  # conditional_job:
  #   runs-on: "ubuntu-20.04"
  #   needs: [conditional_job_check_files]
  #   if: needs.check_file_changed.outputs.docs_changed == 'True'
  #   steps:
  #     - shell: pwsh
  #       run: echo publish docs
  # first-job:
  #   needs: [conditional_job]
  #   if: always()
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: downloading repo
  #       uses: actions/checkout@v3
  #     - name: Install dependencies
  #       run: pip3 install pytest
  #     - name: initating the testing
  #       run: |
  #         cd test
  #         pytest test_*.py
  #     - name: Send mail
  #       if: failure()
  #       uses: dawidd6/action-send-mail@v2
  #       with:
  #         # mail server settings
  #         server_address: smtp.gmail.com
  #         server_port: 465
  #         # user credentials
  #         username: ${{ secrets.EMAIL_USERNAME }}
  #         password: ${{ secrets.EMAIL_PASSWORD }}
  #         # email subject
  #         subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
  #         # email body as text
  #         body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
  #         # comma-separated string, send email to
  #         to: ganesh.sonawane.9942@gmail.com,ganeshsonawane5896@gmail.com,ganesh.sonawane@interactiveavenues.com
  #         # from email name
  #         from: Ganesh Sonawane
